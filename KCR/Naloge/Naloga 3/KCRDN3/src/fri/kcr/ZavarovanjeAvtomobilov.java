/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ZavarovanjeAvtomobilov.java
 *
 * Created on Apr 20, 2013, 9:07:43 AM
 */
package fri.kcr;

import java.io.File;
import java.io.FileWriter;
import java.io.PrintWriter;
import java.util.Calendar;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.ListModel;

/**
 *
 * @author thedeathstreaker
 */
public class ZavarovanjeAvtomobilov extends javax.swing.JFrame {

    /** Creates new form ZavarovanjeAvtomobilov */
    public ZavarovanjeAvtomobilov() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Avtor = new javax.swing.JFrame();
        Avtor_l_avtor = new javax.swing.JLabel();
        Avtor_l_vpisna = new javax.swing.JLabel();
        Avtor_zapri = new javax.swing.JButton();
        s_gorivo = new javax.swing.ButtonGroup();
        s_stsedezev = new javax.swing.ButtonGroup();
        s_zavarovanje = new javax.swing.ButtonGroup();
        s_kasko = new javax.swing.ButtonGroup();
        Shranjevalec = new javax.swing.JFileChooser();
        Obvestilnik = new javax.swing.JFrame();
        obvestilnik_obvestilo = new javax.swing.JLabel();
        obvestilnik_dodatek = new javax.swing.JLabel();
        vredu = new javax.swing.JButton();
        Delovna_Plosca = new javax.swing.JTabbedPane();
        Zavarovanec = new javax.swing.JPanel();
        l_ime = new javax.swing.JLabel();
        v_ime = new javax.swing.JTextField();
        n_ime = new javax.swing.JLabel();
        l_priimek = new javax.swing.JLabel();
        v_priimek = new javax.swing.JTextField();
        n_priimek = new javax.swing.JLabel();
        l_rojstvo = new javax.swing.JLabel();
        v_rojstvo = new javax.swing.JTextField();
        n_rojstvo = new javax.swing.JLabel();
        l_hisna = new javax.swing.JLabel();
        v_hisna = new javax.swing.JTextField();
        n_hisna = new javax.swing.JLabel();
        l_posta = new javax.swing.JLabel();
        v_posta = new javax.swing.JTextField();
        n_posta = new javax.swing.JLabel();
        l_kraj = new javax.swing.JLabel();
        v_kraj = new javax.swing.JTextField();
        n_kraj = new javax.swing.JLabel();
        l_izkusnje = new javax.swing.JLabel();
        obvestilo_zavarovanec = new javax.swing.JLabel();
        g_naprej_zavarovanec = new javax.swing.JButton();
        l_ulica = new javax.swing.JLabel();
        v_ulica = new javax.swing.JTextField();
        n_ulica = new javax.swing.JLabel();
        g_mlad = new javax.swing.JCheckBox();
        Vozilo = new javax.swing.JPanel();
        l_znamka = new javax.swing.JLabel();
        v_znamka = new javax.swing.JTextField();
        n_znamka = new javax.swing.JLabel();
        l_oznaka = new javax.swing.JLabel();
        v_oznaka = new javax.swing.JTextField();
        n_oznaka = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        g_bencin = new javax.swing.JRadioButton();
        g_diesel = new javax.swing.JRadioButton();
        l_moc = new javax.swing.JLabel();
        v_moc = new javax.swing.JTextField();
        n_moc = new javax.swing.JLabel();
        l_prostornina = new javax.swing.JLabel();
        v_prostornina = new javax.swing.JTextField();
        n_prostornina = new javax.swing.JLabel();
        l_stsedezev = new javax.swing.JLabel();
        stsedezev1 = new javax.swing.JRadioButton();
        stsedezev2 = new javax.swing.JRadioButton();
        stsedezev3 = new javax.swing.JRadioButton();
        stsedezev4 = new javax.swing.JRadioButton();
        stsedezev5 = new javax.swing.JRadioButton();
        stsedezevVec = new javax.swing.JRadioButton();
        v_stsedezev = new javax.swing.JTextField();
        l_vrsta = new javax.swing.JLabel();
        v_vrsta = new javax.swing.JComboBox();
        obvestilo_vozilo = new javax.swing.JLabel();
        g_nazaj_vozilo = new javax.swing.JButton();
        g_naprej_vozilo = new javax.swing.JButton();
        l_barva = new javax.swing.JLabel();
        v_barva = new javax.swing.JTextField();
        n_barva = new javax.swing.JLabel();
        n_stsedezev = new javax.swing.JLabel();
        Registracija = new javax.swing.JPanel();
        l_prregistracija = new javax.swing.JLabel();
        v_prregistracija = new javax.swing.JTextField();
        n_prregistracija = new javax.swing.JLabel();
        l_regoznacba = new javax.swing.JLabel();
        v_regoznacba = new javax.swing.JTextField();
        n_regoznacba = new javax.swing.JLabel();
        l_krprregistracije = new javax.swing.JLabel();
        v_krprregistracije = new javax.swing.JTextField();
        n_krprregistracije = new javax.swing.JLabel();
        obvestilo_registracija = new javax.swing.JLabel();
        g_nazaj_registracija = new javax.swing.JButton();
        g_naprej_registracija = new javax.swing.JButton();
        Zavarovanje = new javax.swing.JPanel();
        l_zavarovanje = new javax.swing.JLabel();
        g_AO = new javax.swing.JRadioButton();
        g_AOplus = new javax.swing.JRadioButton();
        l_kasko = new javax.swing.JLabel();
        g_polno = new javax.swing.JRadioButton();
        g_odbitna = new javax.swing.JRadioButton();
        g_brez = new javax.swing.JRadioButton();
        l_dodatno = new javax.swing.JLabel();
        izbira_dodatno = new javax.swing.JScrollPane();
        v_dodatno = new javax.swing.JList();
        obvestilo_dodatno = new javax.swing.JLabel();
        obvestilo_zavarovanje = new javax.swing.JLabel();
        g_nazaj_zavarovanje = new javax.swing.JButton();
        g_shrani = new javax.swing.JButton();
        g_pocisti = new javax.swing.JButton();
        Meni = new javax.swing.JMenuBar();
        Datoteka = new javax.swing.JMenu();
        m_shrani = new javax.swing.JMenuItem();
        m_izhod = new javax.swing.JMenuItem();
        Uredi = new javax.swing.JMenu();
        m_pocisti = new javax.swing.JMenuItem();
        Pomoc = new javax.swing.JMenu();
        m_avtor = new javax.swing.JMenuItem();

        Avtor.setTitle("O avtorju");
        Avtor.setMinimumSize(new java.awt.Dimension(220, 150));
        Avtor.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Avtor_l_avtor.setText("Avtor: Adrian Jarc");
        Avtor.getContentPane().add(Avtor_l_avtor, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        Avtor_l_vpisna.setText("Vpisna Å¡tevilka: 63120165");
        Avtor_l_vpisna.setMinimumSize(new java.awt.Dimension(200, 200));
        Avtor.getContentPane().add(Avtor_l_vpisna, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        Avtor_zapri.setText("Zapri");
        Avtor_zapri.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbiAvtor(evt);
            }
        });
        Avtor.getContentPane().add(Avtor_zapri, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 90, -1, -1));

        Shranjevalec.setDialogTitle("Shrani");
        Shranjevalec.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        Obvestilnik.setTitle("Obvestilo");
        Obvestilnik.setMinimumSize(new java.awt.Dimension(350, 250));

        vredu.setText("Vredu");
        vredu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbiObvestilnik(evt);
            }
        });

        javax.swing.GroupLayout ObvestilnikLayout = new javax.swing.GroupLayout(Obvestilnik.getContentPane());
        Obvestilnik.getContentPane().setLayout(ObvestilnikLayout);
        ObvestilnikLayout.setHorizontalGroup(
            ObvestilnikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ObvestilnikLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ObvestilnikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ObvestilnikLayout.createSequentialGroup()
                        .addComponent(obvestilnik_obvestilo, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                        .addGap(68, 68, 68))
                    .addGroup(ObvestilnikLayout.createSequentialGroup()
                        .addComponent(obvestilnik_dodatek, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                        .addGap(68, 68, 68))
                    .addGroup(ObvestilnikLayout.createSequentialGroup()
                        .addComponent(vredu)
                        .addContainerGap(334, Short.MAX_VALUE))))
        );
        ObvestilnikLayout.setVerticalGroup(
            ObvestilnikLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ObvestilnikLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(obvestilnik_obvestilo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(obvestilnik_dodatek, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(vredu)
                .addContainerGap(160, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikacija za zavarovanje avtomobilov");

        Delovna_Plosca.setMinimumSize(new java.awt.Dimension(410, 86));

        Zavarovanec.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l_ime.setText("Ime: *");
        Zavarovanec.add(l_ime, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 110, -1));

        v_ime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_ime, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 20, 100, -1));
        Zavarovanec.add(n_ime, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 20, 20, 20));

        l_priimek.setText("Priimek: *");
        Zavarovanec.add(l_priimek, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 30, -1, -1));

        v_priimek.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_priimek, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 20, 100, -1));
        Zavarovanec.add(n_priimek, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 20, 20, 20));

        l_rojstvo.setText("Datum rojstva: *");
        Zavarovanec.add(l_rojstvo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        v_rojstvo.setText("dd.mm.llll");
        v_rojstvo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                skrijPomoc(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_rojstvo, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 100, -1));
        Zavarovanec.add(n_rojstvo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 70, 20, 20));

        l_hisna.setText("HiÅ¡na Å¡tevilka: *");
        Zavarovanec.add(l_hisna, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        v_hisna.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_hisna, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 120, 100, -1));
        Zavarovanec.add(n_hisna, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 120, 20, 20));

        l_posta.setText("PoÅ¡ta: *");
        Zavarovanec.add(l_posta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, 110, -1));

        v_posta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_posta, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 100, -1));
        Zavarovanec.add(n_posta, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, 20, 20));

        l_kraj.setText("Kraj: *");
        Zavarovanec.add(l_kraj, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 180, 70, -1));

        v_kraj.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_kraj, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, 100, -1));
        Zavarovanec.add(n_kraj, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 170, 20, 20));

        l_izkusnje.setText("IzkuÅ¡nje: ");
        Zavarovanec.add(l_izkusnje, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, 120, -1));

        obvestilo_zavarovanec.setText("Polja oznaÄena z * so obvezna.");
        Zavarovanec.add(obvestilo_zavarovanec, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, -1, -1));

        g_naprej_zavarovanec.setText("Naprej >");
        g_naprej_zavarovanec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Zavarovanec.add(g_naprej_zavarovanec, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, -1, -1));

        l_ulica.setText("Ulica: *");
        Zavarovanec.add(l_ulica, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 120, -1, -1));

        v_ulica.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Zavarovanec.add(v_ulica, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 120, 100, -1));
        Zavarovanec.add(n_ulica, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 20, 20));

        g_mlad.setText("Mlad voznik");
        Zavarovanec.add(g_mlad, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, -1, -1));

        Delovna_Plosca.addTab("Podatki o zavarovancu", Zavarovanec);

        Vozilo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l_znamka.setText("Znamka: *");
        Vozilo.add(l_znamka, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        v_znamka.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Vozilo.add(v_znamka, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 20, 100, -1));
        Vozilo.add(n_znamka, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 20, 20, 20));

        l_oznaka.setText("Oznaka: *");
        Vozilo.add(l_oznaka, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 120, -1));

        v_oznaka.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Vozilo.add(v_oznaka, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 20, 100, -1));
        Vozilo.add(n_oznaka, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 20, 20));

        jLabel1.setText("Gorivo: ");
        Vozilo.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        s_gorivo.add(g_bencin);
        g_bencin.setSelected(true);
        g_bencin.setText("Bencin");
        Vozilo.add(g_bencin, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 80, -1, -1));

        s_gorivo.add(g_diesel);
        g_diesel.setText("Diesel");
        Vozilo.add(g_diesel, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        l_moc.setText("MoÄ (kW): *");
        Vozilo.add(l_moc, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        v_moc.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Vozilo.add(v_moc, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 120, 100, -1));
        Vozilo.add(n_moc, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 120, 20, 20));

        l_prostornina.setText("Prostornina (l): *");
        Vozilo.add(l_prostornina, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, -1, -1));

        v_prostornina.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Vozilo.add(v_prostornina, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 120, 100, -1));
        Vozilo.add(n_prostornina, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 120, 20, 20));

        l_stsedezev.setText("Å tevilo sedeÅ¾ev: ");
        Vozilo.add(l_stsedezev, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        s_stsedezev.add(stsedezev1);
        stsedezev1.setText("1");
        Vozilo.add(stsedezev1, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, -1, -1));

        s_stsedezev.add(stsedezev2);
        stsedezev2.setText("2");
        Vozilo.add(stsedezev2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, -1, -1));

        s_stsedezev.add(stsedezev3);
        stsedezev3.setText("3");
        Vozilo.add(stsedezev3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 180, -1, -1));

        s_stsedezev.add(stsedezev4);
        stsedezev4.setText("4");
        Vozilo.add(stsedezev4, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 180, -1, -1));

        s_stsedezev.add(stsedezev5);
        stsedezev5.setText("5");
        Vozilo.add(stsedezev5, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        s_stsedezev.add(stsedezevVec);
        stsedezevVec.setText("VeÄ: *");
        Vozilo.add(stsedezevVec, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 180, -1, -1));
        Vozilo.add(v_stsedezev, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, 30, -1));

        l_vrsta.setText("Vrsta vozila: ");
        Vozilo.add(l_vrsta, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        v_vrsta.setModel(vrstaVozila());
        Vozilo.add(v_vrsta, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, 100, -1));

        obvestilo_vozilo.setText("Polja oznaÄena z * so obvezna.");
        Vozilo.add(obvestilo_vozilo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        g_nazaj_vozilo.setText("< Nazaj");
        g_nazaj_vozilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Vozilo.add(g_nazaj_vozilo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        g_naprej_vozilo.setText("Naprej >");
        g_naprej_vozilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Vozilo.add(g_naprej_vozilo, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, -1, -1));

        l_barva.setText("Barva: *");
        Vozilo.add(l_barva, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, -1, -1));

        v_barva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Vozilo.add(v_barva, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, 100, -1));
        Vozilo.add(n_barva, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 230, 20, 20));
        Vozilo.add(n_stsedezev, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 180, 20, 20));

        Delovna_Plosca.addTab("Podatki o vozilu", Vozilo);

        Registracija.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l_prregistracija.setText("Prva registracija: *");
        Registracija.add(l_prregistracija, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 160, 20));

        v_prregistracija.setText("dd.mm.llll");
        v_prregistracija.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                skrijPomoc(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Registracija.add(v_prregistracija, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 20, 100, -1));
        Registracija.add(n_prregistracija, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 20, 20));

        l_regoznacba.setText("Registrska oznaÄba: *");
        Registracija.add(l_regoznacba, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        v_regoznacba.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Registracija.add(v_regoznacba, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 70, 100, -1));
        Registracija.add(n_regoznacba, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, 20, 20));

        l_krprregistracije.setText("Kraj prve registracije: *");
        Registracija.add(l_krprregistracije, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        v_krprregistracije.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                preveriVnos(evt);
            }
        });
        Registracija.add(v_krprregistracije, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 100, -1));
        Registracija.add(n_krprregistracije, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 120, 20, 20));

        obvestilo_registracija.setText("Polja oznaÄena z * so obvezna.");
        Registracija.add(obvestilo_registracija, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        g_nazaj_registracija.setText("< Nazaj");
        g_nazaj_registracija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Registracija.add(g_nazaj_registracija, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        g_naprej_registracija.setText("Naprej >");
        g_naprej_registracija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Registracija.add(g_naprej_registracija, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 340, -1, -1));

        Delovna_Plosca.addTab("Podatki o registraciji", Registracija);

        Zavarovanje.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        l_zavarovanje.setText("Osnovno zavarovanje: ");
        Zavarovanje.add(l_zavarovanje, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        s_zavarovanje.add(g_AO);
        g_AO.setSelected(true);
        g_AO.setText("AO");
        Zavarovanje.add(g_AO, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 20, -1, -1));

        s_zavarovanje.add(g_AOplus);
        g_AOplus.setText("AO+");
        Zavarovanje.add(g_AOplus, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        l_kasko.setText("Kasko: ");
        Zavarovanje.add(l_kasko, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 160, -1));

        s_kasko.add(g_polno);
        g_polno.setText("Polno");
        Zavarovanje.add(g_polno, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 60, -1, -1));

        s_kasko.add(g_odbitna);
        g_odbitna.setText("Odbitna franÅ¡iza");
        Zavarovanje.add(g_odbitna, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 60, -1, -1));

        s_kasko.add(g_brez);
        g_brez.setSelected(true);
        g_brez.setText("Brez");
        Zavarovanje.add(g_brez, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 60, -1, -1));

        l_dodatno.setText("Dodatno zavarovanje: ");
        Zavarovanje.add(l_dodatno, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, -1, -1));

        v_dodatno.setModel(dodatnaZavarovanja());
        izbira_dodatno.setViewportView(v_dodatno);

        Zavarovanje.add(izbira_dodatno, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 210, 140));

        obvestilo_dodatno.setText("Za veÄ izbir drÅ¾ite tipko ctrl");
        Zavarovanje.add(obvestilo_dodatno, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 130, 200, 140));

        obvestilo_zavarovanje.setText("Polja oznaÄena z * so obvezna.");
        Zavarovanje.add(obvestilo_zavarovanje, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        g_nazaj_zavarovanje.setText("< Nazaj");
        g_nazaj_zavarovanje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Zavarovanje.add(g_nazaj_zavarovanje, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        g_shrani.setText("Shrani");
        g_shrani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Zavarovanje.add(g_shrani, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, -1, -1));

        g_pocisti.setText("PoÄisti vse");
        g_pocisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gumbi(evt);
            }
        });
        Zavarovanje.add(g_pocisti, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 340, -1, -1));

        Delovna_Plosca.addTab("Podatki o zavarovanju", Zavarovanje);

        getContentPane().add(Delovna_Plosca, java.awt.BorderLayout.PAGE_START);

        Datoteka.setMnemonic('D');
        Datoteka.setText("Datoteka");

        m_shrani.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        m_shrani.setMnemonic('S');
        m_shrani.setText("Shrani");
        m_shrani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodaMeni(evt);
            }
        });
        Datoteka.add(m_shrani);

        m_izhod.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_I, java.awt.event.InputEvent.CTRL_MASK));
        m_izhod.setMnemonic('I');
        m_izhod.setText("Izhod");
        m_izhod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodaMeni(evt);
            }
        });
        Datoteka.add(m_izhod);

        Meni.add(Datoteka);

        Uredi.setMnemonic('U');
        Uredi.setText("Uredi");

        m_pocisti.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        m_pocisti.setMnemonic('P');
        m_pocisti.setText("PoÄisti vse");
        m_pocisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodaMeni(evt);
            }
        });
        Uredi.add(m_pocisti);

        Meni.add(Uredi);

        Pomoc.setMnemonic('P');
        Pomoc.setText("PomoÄ");

        m_avtor.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        m_avtor.setMnemonic('A');
        m_avtor.setText("O avtorju");
        m_avtor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodaMeni(evt);
            }
        });
        Pomoc.add(m_avtor);

        Meni.add(Pomoc);

        setJMenuBar(Meni);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void metodaMeni(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodaMeni
        if(evt.getSource() == m_avtor){
            Avtor.setVisible(true);
        } else if(evt.getSource() == m_shrani){
            if(preveri()){
                shrani();
            } else{
                obvesti();
            }
        } else if(evt.getSource() == m_izhod){
            System.exit(0);
        } else if(evt.getSource() == m_pocisti){
            pocisti();
        }
    }//GEN-LAST:event_metodaMeni

    private void gumbiAvtor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbiAvtor
        if(evt.getSource() == Avtor_zapri){
            Avtor.setVisible(false);
        }
    }//GEN-LAST:event_gumbiAvtor

    private void preveriVnos(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_preveriVnos
        if(evt.getSource() == v_ime){
            if(v_ime.getText().isEmpty()){
                n_ime.setText("!");
            }else if(v_ime.getText().length()>0){
                n_ime.setText("");
            }
        }else if(evt.getSource() == v_priimek){
            if(v_priimek.getText().isEmpty()){
                n_priimek.setText("!");
            }else if(v_priimek.getText().length()>0){
                n_priimek.setText("");
            }
        }else if(evt.getSource() == v_rojstvo){
            if (v_rojstvo.getText().length() < 10){
                n_rojstvo.setText("!");
                v_rojstvo.setText("dd.mm.llll");
            }else if(v_rojstvo.getText().isEmpty()){
                n_rojstvo.setText("!");
                v_rojstvo.setText("dd.mm.llll");
            }else if(v_rojstvo.getText().length() == 10){
                int leto = Integer.parseInt(v_rojstvo.getText().substring(6, 10));
                int dan = Integer.parseInt(v_rojstvo.getText().substring(0, 2));
                int mesec = Integer.parseInt(v_rojstvo.getText().substring(3, 5)) - 1;
                Calendar cld = Calendar.getInstance();
                cld.setLenient(false);
                cld.set(leto, mesec, dan);
                try {
                    int a = cld.get(Calendar.YEAR);
                    int b = cld.get(Calendar.MONTH);
                    int c = cld.get(Calendar.DATE);
                    n_rojstvo.setText("");
                } catch (Exception e) {
                    n_rojstvo.setText("!");
                }
            }  
        }else if(evt.getSource() == v_hisna){
            if(v_hisna.getText().isEmpty()){
                n_hisna.setText("!");
            }else if(v_hisna.getText().length()>0){
                n_hisna.setText("");
            }
        }else if(evt.getSource() == v_ulica){
            if(v_ulica.getText().isEmpty()){
                n_ulica.setText("!");
            }else if(v_ulica.getText().length()>0){
                n_ulica.setText("");
            }
        }else if(evt.getSource() == v_posta){
            if(v_posta.getText().isEmpty()){
                n_posta.setText("!");
            }else if(v_posta.getText().length()>0){
                n_posta.setText("");
            }
        }else if(evt.getSource() == v_kraj){
            if(v_kraj.getText().isEmpty()){
                n_kraj.setText("!");
            }else if(v_kraj.getText().length()>0){
                n_kraj.setText("");
            }
        }else if(evt.getSource() == v_znamka){
            if(v_znamka.getText().isEmpty()){
                n_znamka.setText("!");
            }else if(v_znamka.getText().length()>0){
                n_znamka.setText("");
            }
        }else if(evt.getSource() == v_oznaka){
            if(v_oznaka.getText().isEmpty()){
                n_oznaka.setText("!");
            }else if(v_oznaka.getText().length()>0){
                n_oznaka.setText("");
            }
        }else if(evt.getSource() == v_moc){
            if(v_moc.getText().isEmpty()){
                n_moc.setText("!");
            }else if(v_moc.getText().length()>0){
                n_moc.setText("");
            }
        }else if(evt.getSource() == v_prostornina){
            if(v_prostornina.getText().isEmpty()){
                n_prostornina.setText("!");
            }else if(v_prostornina.getText().length()>0){
                n_prostornina.setText("");
            }
        }else if(evt.getSource() == v_barva){
            if(v_barva.getText().isEmpty()){
                n_barva.setText("!");
            }else if(v_barva.getText().length()>0){
                n_barva.setText("");
            }
        }else if(evt.getSource() == v_prregistracija){
            if (v_prregistracija.getText().length() < 10){
                n_prregistracija.setText("!");
                v_prregistracija.setText("dd.mm.llll");
            }else if(v_prregistracija.getText().isEmpty()){
                n_prregistracija.setText("!");
                v_prregistracija.setText("dd.mm.llll");
            }else if(v_prregistracija.getText().length() == 10){
                int leto = Integer.parseInt(v_prregistracija.getText().substring(6, 10));
                int dan = Integer.parseInt(v_prregistracija.getText().substring(0, 2));
                int mesec = Integer.parseInt(v_prregistracija.getText().substring(3, 5)) - 1;
                Calendar cld = Calendar.getInstance();
                cld.setLenient(false);
                cld.set(leto, mesec, dan);
                try {
                    int a = cld.get(Calendar.YEAR);
                    int b = cld.get(Calendar.MONTH);
                    int c = cld.get(Calendar.DATE);
                    n_prregistracija.setText("");
                } catch (Exception e) {
                    n_prregistracija.setText("!");
                }
            }
        }else if(evt.getSource() == v_regoznacba){
            if(v_regoznacba.getText().isEmpty()){
                n_regoznacba.setText("!");
            }else if(v_regoznacba.getText().length()>0){
                n_regoznacba.setText("");
            }
        }else if(evt.getSource() == v_krprregistracije){
            if(v_krprregistracije.getText().isEmpty()){
                n_krprregistracije.setText("!");
            }else if(v_krprregistracije.getText().length()>0){
                n_krprregistracije.setText("");
            }
        }
    }//GEN-LAST:event_preveriVnos

    private void skrijPomoc(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_skrijPomoc
        if(evt.getSource() == v_rojstvo){
            if(v_rojstvo.getText().equalsIgnoreCase("dd.mm.llll")){
                v_rojstvo.setText("");
            }
        }else if(evt.getSource() == v_prregistracija){
            if(v_prregistracija.getText().equalsIgnoreCase("dd.mm.llll")){
                v_prregistracija.setText("");
            }
        }
    }//GEN-LAST:event_skrijPomoc

    private void gumbi(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbi
        if(evt.getSource() == g_naprej_zavarovanec){
            Delovna_Plosca.setSelectedIndex(1);
        }else if(evt.getSource() == g_nazaj_vozilo){
            Delovna_Plosca.setSelectedIndex(0);
        }else if(evt.getSource() == g_naprej_vozilo){
            Delovna_Plosca.setSelectedIndex(2);
        }else if(evt.getSource() == g_nazaj_registracija){
            Delovna_Plosca.setSelectedIndex(1);
        }else if(evt.getSource() == g_naprej_registracija){
            Delovna_Plosca.setSelectedIndex(3);
        }else if(evt.getSource() == g_nazaj_zavarovanje){
            Delovna_Plosca.setSelectedIndex(2);
        }else if(evt.getSource() == g_shrani){
            if(preveri()){
                shrani();
            }else{
                obvesti();
            }
        }else if(evt.getSource() == g_pocisti){
            pocisti();
        }
    }//GEN-LAST:event_gumbi

    private void gumbiObvestilnik(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gumbiObvestilnik
        if(evt.getSource() == vredu){
            Obvestilnik.setVisible(false);
        }
    }//GEN-LAST:event_gumbiObvestilnik

    private boolean preveri(){
        boolean a = true;
        
        if(v_barva.getText().isEmpty()){
            n_barva.setText("!");
            a = false;
        }
        if(v_hisna.getText().isEmpty()){
            n_hisna.setText("!");
            a = false;
        }
        if(v_ime.getText().isEmpty()){
            n_ime.setText("!");
            a = false;
        }
        if(v_kraj.getText().isEmpty()){
            n_kraj.setText("!");
            a = false;
        }
        if(v_krprregistracije.getText().isEmpty()){
            n_krprregistracije.setText("!");
            a = false;
        }
        if(v_moc.getText().isEmpty()){
            n_moc.setText("!");
            a = false;
        }
        if(v_oznaka.getText().isEmpty()){
            n_oznaka.setText("!");
            a = false;
        }
        if(v_posta.getText().isEmpty()){
            n_posta.setText("!");
            a = false;
        }
        if(v_priimek.getText().isEmpty()){
            n_priimek.setText("!");
            a = false;
        }
        if(v_prostornina.getText().isEmpty()){
            n_prostornina.setText("!");
            a = false;
        }
        if(v_ulica.getText().isEmpty()){
            n_ulica.setText("!");
            a = false;
        }
        if(v_znamka.getText().isEmpty()){
            n_znamka.setText("!");
            a = false;
        }
        if(stsedezevVec.isSelected()){
            n_stsedezev.setText("!");
            a = false;
        }
        if(v_regoznacba.getText().isEmpty()){
            n_regoznacba.setText("!");
            a = false;
        }
        if (v_rojstvo.getText().length() < 10){
            n_rojstvo.setText("!");
            v_rojstvo.setText("dd.mm.llll");
            a = false;
        }
        if(v_rojstvo.getText().isEmpty()){
            n_rojstvo.setText("!");
            v_rojstvo.setText("dd.mm.llll");
            a = false;
        }
        if (v_prregistracija.getText().length() < 10){
            n_prregistracija.setText("!");
            v_prregistracija.setText("dd.mm.llll");
            a = false;
        }
        if(v_prregistracija.getText().isEmpty()){
            n_prregistracija.setText("!");
            v_prregistracija.setText("dd.mm.llll");
            a = false;
        }
        if(v_prregistracija.getText().length() == 10){
            if(v_prregistracija.getText().equalsIgnoreCase("dd.mm.llll")){
                n_prregistracija.setText("!");
                v_prregistracija.setText("dd.mm.llll");
                a = false;
            }else{
                try {
                    int leto = Integer.parseInt(v_prregistracija.getText().substring(6, 10));
                    int dan = Integer.parseInt(v_prregistracija.getText().substring(0, 2));
                    int mesec = Integer.parseInt(v_prregistracija.getText().substring(3, 5)) - 1;
                    Calendar cld = Calendar.getInstance();
                    cld.setLenient(false);
                    cld.set(leto, mesec, dan);
                    int leto1 = cld.get(Calendar.YEAR);
                    int mesec1 = cld.get(Calendar.MONTH);
                    int dan1 = cld.get(Calendar.DATE);
                } catch (Exception e) {
                    n_prregistracija.setText("!");
                    a = false;
                }
            }
        }
        if(v_rojstvo.getText().length() == 10){
            if(v_rojstvo.getText().equalsIgnoreCase("dd.mm.llll")){
                n_rojstvo.setText("!");
                v_rojstvo.setText("dd.mm.llll");
                a = false;
            } else{
                try {
                    int leto = Integer.parseInt(v_rojstvo.getText().substring(6, 10));
                    int dan = Integer.parseInt(v_rojstvo.getText().substring(0, 2));
                    int mesec = Integer.parseInt(v_rojstvo.getText().substring(3, 5)) - 1;
                    Calendar cld = Calendar.getInstance();
                    cld.setLenient(false);
                    cld.set(leto, mesec, dan);
                    int leto1 = cld.get(Calendar.YEAR);
                    int mesec1 = cld.get(Calendar.MONTH);
                    int dan1 = cld.get(Calendar.DATE);
                } catch (Exception e) {
                    n_rojstvo.setText("!");
                    a = false;
                }
            }
        } 
        return a;
    }
    
    private void obvesti(){
        Obvestilnik.setVisible(true);
        obvestilnik_obvestilo.setText("Niste izpolnili vseh polj.");
        obvestilnik_dodatek.setText("PoiÅ¡Äite polja oznaÄena z !");
    }
    
    private void shrani(){
        if(Shranjevalec.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
            File f = Shranjevalec.getSelectedFile();
            try {
                PrintWriter out = new PrintWriter(new FileWriter(f));
                out.println("Podatki o osebi:");
                out.println("Ime: " + v_ime.getText() + "  |  Priimek: " + v_priimek.getText());
                if(g_mlad.isSelected()){
                    out.println("IzkuÅ¡nje: Mlad voznik");    
                }else{
                    out.println("IzkuÅ¡nje: IzkuÅ¡en voznik");
                }
                out.println("Naslov:");
                out.println(v_ulica.getText() + " " + v_hisna.getText());
                out.println(v_posta.getText() + " " + v_kraj.getText());
                out.println("_____________________________________");
                out.println("Podatki o avtomobilu:");
                out.println("Znamka: " + v_znamka.getText() + "  |  Oznaka: " + v_oznaka.getText());
                if(g_bencin.isSelected()){
                    out.println("Gorivo: Bencin");
                }else if(g_diesel.isSelected()){
                    out.println("Gorivo: Diesel");
                }
                out.println("MoÄ: " + v_moc.getText() + "kW  |  Prostornina: " + v_prostornina.getText() + "l");
                if (stsedezevVec.isSelected()){
                    out.println("Å tevilo sedeÅ¾ev: " + v_stsedezev.getText());
                }else if(stsedezev1.isSelected()){
                    out.println("Å tevilo sedeÅ¾ev: 1");
                }else if(stsedezev2.isSelected()){
                    out.println("Å tevilo sedeÅ¾ev: 2");
                }else if(stsedezev3.isSelected()){
                    out.println("Å tevilo sedeÅ¾ev: 3");
                }else if(stsedezev4.isSelected()){
                    out.println("Å tevilo sedeÅ¾ev: 4");
                }else if(stsedezev5.isSelected()){
                    out.println("Å tevilo sedeÅ¾ev: 5");
                }
                out.println("Vrsta vozila: " + v_vrsta.getSelectedItem().toString() + "  |  Barva: " + v_barva.getText());
                out.println("_____________________________________");                
                out.println("Podatki o registraciji:");                
                out.println("Prva registracija: " + v_prregistracija.getText());                
                out.println("Registrska oznaÄba: " + v_regoznacba.getText());                
                out.println("Kraj prve registracije: " + v_krprregistracije.getText());                
                out.println("_____________________________________");                
                out.println("Podatki o zavarovanju:");                
                if(g_AO.isSelected()){
                    out.println("Osnovno zavarovanje: AO");                    
                }else if(g_AOplus.isSelected()){
                    out.println("Osnovno zavarovanje: AO+");
                }
                if(g_brez.isSelected()){
                    out.println("Kasko zavarovanje: Brez");
                }else if(g_odbitna.isSelected()){
                    out.println("Kasko zavarovanje: Odbitna franÅ¡iza");
                }else if(g_polno.isSelected()){
                    out.println("Kasko zavarovanje: Polno");
                }
                String vse = v_dodatno.getSelectedValuesList().toString();
                out.print("Dodatna zavarovanja: " + vse.substring(1, vse.length() - 1));
                out.close();
                Obvestilnik.setVisible(true);
                obvestilnik_obvestilo.setText("Datoteka z imenom " + f.getName() + ".");
                obvestilnik_dodatek.setText("Je bila uspeÅ¡no shranjena.");
            } catch (Exception e) {
                System.err.print(e);
                Obvestilnik.setVisible(true);
                obvestilnik_obvestilo.setText("Napaka pri pisanju datoteke.");
                obvestilnik_dodatek.setText("");
            }
        }
    }
    
    private void pocisti(){
        v_barva.setText("");
        v_hisna.setText("");
        v_ime.setText("");
        v_kraj.setText("");
        v_krprregistracije.setText("");
        v_moc.setText("");
        v_oznaka.setText("");
        v_posta.setText("");
        v_priimek.setText("");
        v_prostornina.setText("");
        v_prregistracija.setText("dd.mm.llll");
        v_regoznacba.setText("");
        v_rojstvo.setText("dd.mm.llll");
        v_stsedezev.setText("");
        v_ulica.setText("");
        v_znamka.setText("");
        v_vrsta.setSelectedIndex(-1);
        v_dodatno.clearSelection();
        s_stsedezev.clearSelection();
        g_brez.setSelected(true);
        g_AO.setSelected(true);
        g_bencin.setSelected(true);
        n_barva.setText("");
        n_hisna.setText("");
        n_ime.setText("");
        n_kraj.setText("");
        n_krprregistracije.setText("");
        n_moc.setText("");
        n_oznaka.setText("");
        n_posta.setText("");
        n_priimek.setText("");
        n_prostornina.setText("");
        n_prregistracija.setText("");
        n_regoznacba.setText("");
        n_rojstvo.setText("");
        n_ulica.setText("");
        n_znamka.setText("");
        n_stsedezev.setText("");
        Obvestilnik.setVisible(true);
        obvestilnik_obvestilo.setText("Vnosi so bili poÄiÅ¡Äeni.");
        obvestilnik_dodatek.setText("");
    }
    
    private ComboBoxModel vrstaVozila(){
        String vrste[] = {"Osebni avto", "Motor", "Traktor", "Tovornjak", "Avtobus"};
        DefaultComboBoxModel vrsteVozil = new DefaultComboBoxModel();
        for(int i=0; i<vrste.length; i++){
            vrsteVozil.addElement(vrste[i]);
        }
        return vrsteVozil;
    }
    
    private ListModel dodatnaZavarovanja(){
        String opcije[] = {"zavarovanje stekel", "zavarovanje na parkiriÅ¡Äu", "zavarovanje potnikov", "zavarovanje tretje osebe", "zavarovanje gum", "zavarovanje proti kraji", "zavarovanje proti toÄi"};
        DefaultListModel dodatna = new DefaultListModel();
        for (int i=0; i<opcije.length; i++){
            dodatna.addElement(opcije[i]);
        }
        return dodatna;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ZavarovanjeAvtomobilov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ZavarovanjeAvtomobilov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ZavarovanjeAvtomobilov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ZavarovanjeAvtomobilov.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ZavarovanjeAvtomobilov().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Avtor;
    private javax.swing.JLabel Avtor_l_avtor;
    private javax.swing.JLabel Avtor_l_vpisna;
    private javax.swing.JButton Avtor_zapri;
    private javax.swing.JMenu Datoteka;
    private javax.swing.JTabbedPane Delovna_Plosca;
    private javax.swing.JMenuBar Meni;
    private javax.swing.JFrame Obvestilnik;
    private javax.swing.JMenu Pomoc;
    private javax.swing.JPanel Registracija;
    private javax.swing.JFileChooser Shranjevalec;
    private javax.swing.JMenu Uredi;
    private javax.swing.JPanel Vozilo;
    private javax.swing.JPanel Zavarovanec;
    private javax.swing.JPanel Zavarovanje;
    private javax.swing.JRadioButton g_AO;
    private javax.swing.JRadioButton g_AOplus;
    private javax.swing.JRadioButton g_bencin;
    private javax.swing.JRadioButton g_brez;
    private javax.swing.JRadioButton g_diesel;
    private javax.swing.JCheckBox g_mlad;
    private javax.swing.JButton g_naprej_registracija;
    private javax.swing.JButton g_naprej_vozilo;
    private javax.swing.JButton g_naprej_zavarovanec;
    private javax.swing.JButton g_nazaj_registracija;
    private javax.swing.JButton g_nazaj_vozilo;
    private javax.swing.JButton g_nazaj_zavarovanje;
    private javax.swing.JRadioButton g_odbitna;
    private javax.swing.JButton g_pocisti;
    private javax.swing.JRadioButton g_polno;
    private javax.swing.JButton g_shrani;
    private javax.swing.JScrollPane izbira_dodatno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel l_barva;
    private javax.swing.JLabel l_dodatno;
    private javax.swing.JLabel l_hisna;
    private javax.swing.JLabel l_ime;
    private javax.swing.JLabel l_izkusnje;
    private javax.swing.JLabel l_kasko;
    private javax.swing.JLabel l_kraj;
    private javax.swing.JLabel l_krprregistracije;
    private javax.swing.JLabel l_moc;
    private javax.swing.JLabel l_oznaka;
    private javax.swing.JLabel l_posta;
    private javax.swing.JLabel l_priimek;
    private javax.swing.JLabel l_prostornina;
    private javax.swing.JLabel l_prregistracija;
    private javax.swing.JLabel l_regoznacba;
    private javax.swing.JLabel l_rojstvo;
    private javax.swing.JLabel l_stsedezev;
    private javax.swing.JLabel l_ulica;
    private javax.swing.JLabel l_vrsta;
    private javax.swing.JLabel l_zavarovanje;
    private javax.swing.JLabel l_znamka;
    private javax.swing.JMenuItem m_avtor;
    private javax.swing.JMenuItem m_izhod;
    private javax.swing.JMenuItem m_pocisti;
    private javax.swing.JMenuItem m_shrani;
    private javax.swing.JLabel n_barva;
    private javax.swing.JLabel n_hisna;
    private javax.swing.JLabel n_ime;
    private javax.swing.JLabel n_kraj;
    private javax.swing.JLabel n_krprregistracije;
    private javax.swing.JLabel n_moc;
    private javax.swing.JLabel n_oznaka;
    private javax.swing.JLabel n_posta;
    private javax.swing.JLabel n_priimek;
    private javax.swing.JLabel n_prostornina;
    private javax.swing.JLabel n_prregistracija;
    private javax.swing.JLabel n_regoznacba;
    private javax.swing.JLabel n_rojstvo;
    private javax.swing.JLabel n_stsedezev;
    private javax.swing.JLabel n_ulica;
    private javax.swing.JLabel n_znamka;
    private javax.swing.JLabel obvestilnik_dodatek;
    private javax.swing.JLabel obvestilnik_obvestilo;
    private javax.swing.JLabel obvestilo_dodatno;
    private javax.swing.JLabel obvestilo_registracija;
    private javax.swing.JLabel obvestilo_vozilo;
    private javax.swing.JLabel obvestilo_zavarovanec;
    private javax.swing.JLabel obvestilo_zavarovanje;
    private javax.swing.ButtonGroup s_gorivo;
    private javax.swing.ButtonGroup s_kasko;
    private javax.swing.ButtonGroup s_stsedezev;
    private javax.swing.ButtonGroup s_zavarovanje;
    private javax.swing.JRadioButton stsedezev1;
    private javax.swing.JRadioButton stsedezev2;
    private javax.swing.JRadioButton stsedezev3;
    private javax.swing.JRadioButton stsedezev4;
    private javax.swing.JRadioButton stsedezev5;
    private javax.swing.JRadioButton stsedezevVec;
    private javax.swing.JTextField v_barva;
    private javax.swing.JList v_dodatno;
    private javax.swing.JTextField v_hisna;
    private javax.swing.JTextField v_ime;
    private javax.swing.JTextField v_kraj;
    private javax.swing.JTextField v_krprregistracije;
    private javax.swing.JTextField v_moc;
    private javax.swing.JTextField v_oznaka;
    private javax.swing.JTextField v_posta;
    private javax.swing.JTextField v_priimek;
    private javax.swing.JTextField v_prostornina;
    private javax.swing.JTextField v_prregistracija;
    private javax.swing.JTextField v_regoznacba;
    private javax.swing.JTextField v_rojstvo;
    private javax.swing.JTextField v_stsedezev;
    private javax.swing.JTextField v_ulica;
    private javax.swing.JComboBox v_vrsta;
    private javax.swing.JTextField v_znamka;
    private javax.swing.JButton vredu;
    // End of variables declaration//GEN-END:variables
}
